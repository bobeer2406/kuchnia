@page "/Przepis"
@inject kuchnia.Service.RecepturaService RecepturaService

<h3>Wybierz przepis</h3>

@if (przepisy == null)
{
    <p>Ładowanie przepisów...</p>
}
else if (przepisy.Count == 0)
{
    <p>Brak dostępnych przepisów.</p>
}
else
{
    <input type="text" placeholder="Szukaj przepisu..." @bind="frazaSzukaj" class="form-control mb-3" />

    <select @onchange="OnKategoriaChanged" class="form-select mb-3">
        <option value="">-- Wybierz kategorię --</option>
        @foreach (var kat in kategorie)
        {
            <option value="@kat" selected="@(kat == wybranaKategoria)">@kat</option>
        }
    </select>

    <select @onchange="OnPrzepisChanged" class="form-select">
        <option value="">-- Wybierz przepis --</option>
        @foreach (var p in filtrowanePrzepisy)
        {
            <option value="@p.nazwa">@p.nazwa</option>
        }
    </select>

    @if (wybranyPrzepis != null)
    {
        <hr />
        <h4>@wybranyPrzepis.nazwa</h4>
        <h5>Kategoria: @wybranyPrzepis.Kategoria</h5>

        <h5>Składniki:</h5>
        <ul>
            @foreach (var s in wybranyPrzepis.skladniki)
            {
                <li>@s</li>
            }
        </ul>

        <h5>Sposób przygotowania:</h5>
        <ul>
            @foreach (var z in wybranyPrzepis.sposob_przygotowania)
            {
                <li>@z</li>
            }
        </ul>

        <p><b>Temperatura pieczenia:</b> @wybranyPrzepis.Temperatura_pieczenia</p>
        <p><b>Czas pieczenia:</b> @wybranyPrzepis.Czas_pieczenia</p>
    }
}

@code {
    private List<kuchnia.Service.Przepis> przepisy;
    private kuchnia.Service.Przepis wybranyPrzepis;

    private string frazaSzukaj = "";
    private string wybranaKategoria = "";

    private List<string> kategorie = new List<string>();

    private IEnumerable<kuchnia.Service.Przepis> filtrowanePrzepisy =>
        przepisy
            .Where(p =>
                (string.IsNullOrWhiteSpace(frazaSzukaj) || p.nazwa.Contains(frazaSzukaj, StringComparison.OrdinalIgnoreCase))
                && (string.IsNullOrWhiteSpace(wybranaKategoria) || p.Kategoria == wybranaKategoria));

    protected override async Task OnInitializedAsync()
    {
        var url = "https://raw.githubusercontent.com/bobeer2406/kuchnia/main/kuchnia/data/Przepisy.json";
        przepisy = await RecepturaService.PobierzPrzepisAsync(url);
        kategorie = przepisy.Select(p => p.Kategoria).Distinct().OrderBy(k => k).ToList();
    }

    private void OnPrzepisChanged(ChangeEventArgs e)
    {
        var nazwa = e.Value?.ToString();
        wybranyPrzepis = przepisy.FirstOrDefault(p => p.nazwa == nazwa);
    }

    private void OnKategoriaChanged(ChangeEventArgs e)
    {
        wybranaKategoria = e.Value?.ToString() ?? "";
        wybranyPrzepis = null; // reset wyboru przepisu po zmianie kategorii
    }
}
